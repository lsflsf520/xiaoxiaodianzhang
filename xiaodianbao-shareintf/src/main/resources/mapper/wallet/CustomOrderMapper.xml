<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fengshang.xiaodianbao.wallet.dao.CustomOrderDao" >
  <resultMap id="BaseResultMap" type="com.fengshang.xiaodianbao.wallet.entity.CustomOrder" >
    <id column="user_coupon_id" property="userCouponId" jdbcType="INTEGER" />
    <result column="wx_uid" property="wxUid" jdbcType="INTEGER" />
    <result column="ord_fee" property="ordFee" jdbcType="DECIMAL" />
    <result column="can_use_fee" property="canUseFee" jdbcType="DECIMAL" />
    <result column="left_pay_fee" property="leftPayFee" jdbcType="DECIMAL" />
    <result column="balance_pay_fee" property="balancePayFee" jdbcType="DECIMAL" />
    <result column="third_pay_fee" property="thirdPayFee" jdbcType="DECIMAL" />
    <result column="pay_method" property="payMethod" jdbcType="CHAR" />
    <result column="third_trade_id" property="thirdTradeId" jdbcType="VARCHAR" />
    <result column="third_payment_no" property="thirdPaymentNo" jdbcType="VARCHAR" />
    <result column="ord_state" property="ordState" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_uptime" property="lastUptime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="BaseColumnList" >
    user_coupon_id, wx_uid, ord_fee, can_use_fee, left_pay_fee, balance_pay_fee, third_pay_fee, 
    pay_method, third_trade_id, third_payment_no, ord_state, create_time, last_uptime
  </sql>
  <select id="findByPK" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="BaseColumnList" />
    from custom_order
    where user_coupon_id = #{userCouponId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPK" parameterType="java.lang.Integer" >
    delete from custom_order
    where user_coupon_id = #{userCouponId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fengshang.xiaodianbao.wallet.entity.CustomOrder" >
    insert into custom_order (user_coupon_id, wx_uid, ord_fee, 
      can_use_fee, left_pay_fee, balance_pay_fee, 
      third_pay_fee, pay_method, third_trade_id, 
      third_payment_no, ord_state, create_time, 
      last_uptime)
    values (#{userCouponId,jdbcType=INTEGER}, #{wxUid,jdbcType=INTEGER}, #{ordFee,jdbcType=DECIMAL}, 
      #{canUseFee,jdbcType=DECIMAL}, #{leftPayFee,jdbcType=DECIMAL}, #{balancePayFee,jdbcType=DECIMAL}, 
      #{thirdPayFee,jdbcType=DECIMAL}, #{payMethod,jdbcType=CHAR}, #{thirdTradeId,jdbcType=VARCHAR}, 
      #{thirdPaymentNo,jdbcType=VARCHAR}, #{ordState,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastUptime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPK" parameterType="com.fengshang.xiaodianbao.wallet.entity.CustomOrder" >
    update custom_order
    <set >
      <if test="wxUid != null" >
        wx_uid = #{wxUid,jdbcType=INTEGER},
      </if>
      <if test="ordFee != null" >
        ord_fee = #{ordFee,jdbcType=DECIMAL},
      </if>
      <if test="canUseFee != null" >
        can_use_fee = #{canUseFee,jdbcType=DECIMAL},
      </if>
      <if test="leftPayFee != null" >
        left_pay_fee = #{leftPayFee,jdbcType=DECIMAL},
      </if>
      <if test="balancePayFee != null" >
        balance_pay_fee = #{balancePayFee,jdbcType=DECIMAL},
      </if>
      <if test="thirdPayFee != null" >
        third_pay_fee = #{thirdPayFee,jdbcType=DECIMAL},
      </if>
      <if test="payMethod != null" >
        pay_method = #{payMethod,jdbcType=CHAR},
      </if>
      <if test="thirdTradeId != null" >
        third_trade_id = #{thirdTradeId,jdbcType=VARCHAR},
      </if>
      <if test="thirdPaymentNo != null" >
        third_payment_no = #{thirdPaymentNo,jdbcType=VARCHAR},
      </if>
      <if test="ordState != null" >
        ord_state = #{ordState,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUptime != null" >
        last_uptime = #{lastUptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_coupon_id = #{userCouponId,jdbcType=INTEGER}
  </update>
  <insert id="insertReturnPK" useGeneratedKeys="true" keyProperty="userCouponId" parameterType="com.fengshang.xiaodianbao.wallet.entity.CustomOrder" >
    insert into custom_order (user_coupon_id, wx_uid, ord_fee, 
      can_use_fee, left_pay_fee, balance_pay_fee, 
      third_pay_fee, pay_method, third_trade_id, 
      third_payment_no, ord_state, create_time, 
      last_uptime)
    values (#{userCouponId,jdbcType=INTEGER}, #{wxUid,jdbcType=INTEGER}, #{ordFee,jdbcType=DECIMAL}, 
      #{canUseFee,jdbcType=DECIMAL}, #{leftPayFee,jdbcType=DECIMAL}, #{balancePayFee,jdbcType=DECIMAL}, 
      #{thirdPayFee,jdbcType=DECIMAL}, #{payMethod,jdbcType=CHAR}, #{thirdTradeId,jdbcType=VARCHAR}, 
      #{thirdPaymentNo,jdbcType=VARCHAR}, #{ordState,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastUptime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into custom_order
		(user_coupon_id,wx_uid,ord_fee,can_use_fee,left_pay_fee,balance_pay_fee,third_pay_fee,pay_method,third_trade_id,third_payment_no,ord_state,create_time,last_uptime)
	values 
	<foreach collection="list" item="item" separator="," index="index">
		(#{item.userCouponId,jdbcType=INTEGER},#{item.wxUid,jdbcType=INTEGER},#{item.ordFee,jdbcType=DECIMAL},#{item.canUseFee,jdbcType=DECIMAL},#{item.leftPayFee,jdbcType=DECIMAL},#{item.balancePayFee,jdbcType=DECIMAL},#{item.thirdPayFee,jdbcType=DECIMAL},#{item.payMethod,jdbcType=CHAR},#{item.thirdTradeId,jdbcType=VARCHAR},#{item.thirdPaymentNo,jdbcType=VARCHAR},#{item.ordState,jdbcType=CHAR},#{item.createTime,jdbcType=TIMESTAMP},#{item.lastUptime,jdbcType=TIMESTAMP})
	</foreach>
  </insert>
  <delete id="batchDel" >
    		delete from custom_order
			where user_coupon_id in 
				<foreach collection="pks" item="item" separator="," open="(" close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
  </delete>
  <update id="updateStatus" >
    		update custom_order
			set ${statusColName} = #{delStatusVal, jdbcType=INTEGER}
			where user_coupon_id in 
				<foreach collection="pks" item="item" separator="," open="(" close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
  </update>
  <select id="findByPks" resultMap="BaseResultMap" >
    		select 
			<include refid="BaseColumnList" />
			from custom_order
			where user_coupon_id in 
				<foreach collection="pks" item="item" separator="," open="(" close=")"> 
					#{item,jdbcType=INTEGER}
				</foreach>
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    select
		<include refid="BaseColumnList"/>
	from custom_order
	<where>
		<trim suffixOverrides="and" >
			<if test="userCouponId != null and userCouponId > 0" >
				and user_coupon_id = #{userCouponId,jdbcType=INTEGER}
			</if>
			<if test="wxUid != null and wxUid > 0" >
				and wx_uid = #{wxUid,jdbcType=INTEGER}
			</if>
			<if test="ordFee != null" >
				and ord_fee = #{ordFee,jdbcType=DECIMAL}
			</if>
			<if test="canUseFee != null" >
				and can_use_fee = #{canUseFee,jdbcType=DECIMAL}
			</if>
			<if test="leftPayFee != null" >
				and left_pay_fee = #{leftPayFee,jdbcType=DECIMAL}
			</if>
			<if test="balancePayFee != null" >
				and balance_pay_fee = #{balancePayFee,jdbcType=DECIMAL}
			</if>
			<if test="thirdPayFee != null" >
				and third_pay_fee = #{thirdPayFee,jdbcType=DECIMAL}
			</if>
			<if test="payMethod != null" >
				and pay_method = #{payMethod,jdbcType=CHAR}
			</if>
			<if test="thirdTradeId != null and thirdTradeId != ''" >
				and third_trade_id = #{thirdTradeId,jdbcType=VARCHAR}
			</if>
			<if test="thirdPaymentNo != null and thirdPaymentNo != ''" >
				and third_payment_no = #{thirdPaymentNo,jdbcType=VARCHAR}
			</if>
			<if test="ordState != null" >
				and ord_state = #{ordState,jdbcType=CHAR}
			</if>
			<!--<if test="queryParam != null">
				<if test="queryParam.startDate != null and queryParam.startDate != '' and queryParam.endDate != null and queryParam.endDate != ''">
					and create_time between #{queryParam.startDate, jdbcType=VARCHAR} and #{queryParam.endDate, jdbcType=VARCHAR}
				</if>
				<if test="queryParam.keyword != null and queryParam.keyword != ''">
					and (name like concat('%', #{queryParam.keyword, jdbcType=VARCHAR}, '%') or other_col like concat('%', #{queryParam.keyword, jdbcType=VARCHAR}, '%') )
				</if>
			</if>-->
		</trim>
	</where>
  </select>
</mapper>